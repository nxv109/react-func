{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useLayoutEffect, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nexport default function useKeepPositionScroll() {\n  _s();\n\n  let location = useLocation();\n  const [scrollTop, setScrollTop] = useState(0);\n  const scrollPosition = useMemo(() => {\n    return JSON.parse(sessionStorage.getItem('scroll-position')) || [];\n  }, []);\n\n  const windowScrollTop = () => {\n    const position = window.pageYOffset;\n    setScrollTop(position);\n  };\n\n  useLayoutEffect(() => {\n    var _scrollPosition$find;\n\n    if (!scrollPosition.length) return;\n    const positionByPathname = ((_scrollPosition$find = scrollPosition.find(v => v.pathname === location.pathname)) === null || _scrollPosition$find === void 0 ? void 0 : _scrollPosition$find.position) || 0;\n    console.log(positionByPathname);\n    window.scrollTo(0, positionByPathname);\n  }, []);\n  useEffect(() => {\n    window.addEventListener('scroll', windowScrollTop);\n    return () => window.removeEventListener('scroll', windowScrollTop);\n  }, []);\n  useEffect(() => {\n    let newScrollPosition = [];\n    const id = scrollPosition.findIndex(v => v.pathname === location.pathname);\n\n    if (id !== -1) {\n      const position = scrollTop || scrollPosition[id].position;\n      newScrollPosition = [...scrollPosition];\n      newScrollPosition.splice(id, 1, {\n        pathname: location.pathname,\n        position: position\n      });\n      sessionStorage.setItem('scroll-position', JSON.stringify(newScrollPosition));\n      return;\n    }\n\n    newScrollPosition = [...scrollPosition, {\n      pathname: location.pathname,\n      position: scrollTop\n    }];\n    sessionStorage.setItem('scroll-position', JSON.stringify(newScrollPosition));\n  }, [location.pathname, scrollTop, scrollPosition]);\n  return location;\n}\n\n_s(useKeepPositionScroll, \"3mdxnu0QFhR4x9I9ts4EYdmkCSE=\", false, function () {\n  return [useLocation];\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/github/react-func/keep-scroll/src/hooks/useKeepPositionScroll.js"],"names":["useState","useEffect","useLayoutEffect","useMemo","useLocation","useKeepPositionScroll","location","scrollTop","setScrollTop","scrollPosition","JSON","parse","sessionStorage","getItem","windowScrollTop","position","window","pageYOffset","length","positionByPathname","find","v","pathname","console","log","scrollTo","addEventListener","removeEventListener","newScrollPosition","id","findIndex","splice","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,eAA9B,EAA+CC,OAA/C,QAA8D,OAA9D;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,eAAe,SAASC,qBAAT,GAAiC;AAAA;;AAC9C,MAAIC,QAAQ,GAAGF,WAAW,EAA1B;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMS,cAAc,GAAGN,OAAO,CAAC,MAAM;AACnC,WAAOO,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAAX,KAAyD,EAAhE;AACD,GAF6B,EAE3B,EAF2B,CAA9B;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5B,UAAMC,QAAQ,GAAGC,MAAM,CAACC,WAAxB;AACAT,IAAAA,YAAY,CAACO,QAAD,CAAZ;AACD,GAHD;;AAKAb,EAAAA,eAAe,CAAC,MAAM;AAAA;;AACpB,QAAI,CAACO,cAAc,CAACS,MAApB,EAA4B;AAC5B,UAAMC,kBAAkB,GACtB,yBAAAV,cAAc,CAACW,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,QAAF,KAAehB,QAAQ,CAACgB,QAAnD,+EAA8DP,QAA9D,KACA,CAFF;AAIAQ,IAAAA,OAAO,CAACC,GAAR,CAAYL,kBAAZ;AAEAH,IAAAA,MAAM,CAACS,QAAP,CAAgB,CAAhB,EAAmBN,kBAAnB;AACD,GATc,EASZ,EATY,CAAf;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCZ,eAAlC;AAEA,WAAO,MAAME,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCb,eAArC,CAAb;AACD,GAJQ,EAIN,EAJM,CAAT;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2B,iBAAiB,GAAG,EAAxB;AAEA,UAAMC,EAAE,GAAGpB,cAAc,CAACqB,SAAf,CACRT,CAAD,IAAOA,CAAC,CAACC,QAAF,KAAehB,QAAQ,CAACgB,QADtB,CAAX;;AAIA,QAAIO,EAAE,KAAK,CAAC,CAAZ,EAAe;AACb,YAAMd,QAAQ,GAAGR,SAAS,IAAIE,cAAc,CAACoB,EAAD,CAAd,CAAmBd,QAAjD;AAEAa,MAAAA,iBAAiB,GAAG,CAAC,GAAGnB,cAAJ,CAApB;AACAmB,MAAAA,iBAAiB,CAACG,MAAlB,CAAyBF,EAAzB,EAA6B,CAA7B,EAAgC;AAC9BP,QAAAA,QAAQ,EAAEhB,QAAQ,CAACgB,QADW;AAE9BP,QAAAA,QAAQ,EAAEA;AAFoB,OAAhC;AAKAH,MAAAA,cAAc,CAACoB,OAAf,CACE,iBADF,EAEEtB,IAAI,CAACuB,SAAL,CAAeL,iBAAf,CAFF;AAKA;AACD;;AAEDA,IAAAA,iBAAiB,GAAG,CAClB,GAAGnB,cADe,EAElB;AACEa,MAAAA,QAAQ,EAAEhB,QAAQ,CAACgB,QADrB;AAEEP,MAAAA,QAAQ,EAAER;AAFZ,KAFkB,CAApB;AAQAK,IAAAA,cAAc,CAACoB,OAAf,CACE,iBADF,EAEEtB,IAAI,CAACuB,SAAL,CAAeL,iBAAf,CAFF;AAID,GApCQ,EAoCN,CAACtB,QAAQ,CAACgB,QAAV,EAAoBf,SAApB,EAA+BE,cAA/B,CApCM,CAAT;AAsCA,SAAOH,QAAP;AACD;;GApEuBD,qB;UACPD,W","sourcesContent":["import { useState, useEffect, useLayoutEffect, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function useKeepPositionScroll() {\n  let location = useLocation();\n  const [scrollTop, setScrollTop] = useState(0);\n  const scrollPosition = useMemo(() => {\n    return JSON.parse(sessionStorage.getItem('scroll-position')) || [];\n  }, []);\n\n  const windowScrollTop = () => {\n    const position = window.pageYOffset;\n    setScrollTop(position);\n  };\n\n  useLayoutEffect(() => {\n    if (!scrollPosition.length) return;\n    const positionByPathname =\n      scrollPosition.find((v) => v.pathname === location.pathname)?.position ||\n      0;\n\n    console.log(positionByPathname);\n\n    window.scrollTo(0, positionByPathname);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('scroll', windowScrollTop);\n\n    return () => window.removeEventListener('scroll', windowScrollTop);\n  }, []);\n\n  useEffect(() => {\n    let newScrollPosition = [];\n\n    const id = scrollPosition.findIndex(\n      (v) => v.pathname === location.pathname\n    );\n\n    if (id !== -1) {\n      const position = scrollTop || scrollPosition[id].position;\n\n      newScrollPosition = [...scrollPosition];\n      newScrollPosition.splice(id, 1, {\n        pathname: location.pathname,\n        position: position,\n      });\n\n      sessionStorage.setItem(\n        'scroll-position',\n        JSON.stringify(newScrollPosition)\n      );\n\n      return;\n    }\n\n    newScrollPosition = [\n      ...scrollPosition,\n      {\n        pathname: location.pathname,\n        position: scrollTop,\n      },\n    ];\n\n    sessionStorage.setItem(\n      'scroll-position',\n      JSON.stringify(newScrollPosition)\n    );\n  }, [location.pathname, scrollTop, scrollPosition]);\n\n  return location;\n}\n"]},"metadata":{},"sourceType":"module"}