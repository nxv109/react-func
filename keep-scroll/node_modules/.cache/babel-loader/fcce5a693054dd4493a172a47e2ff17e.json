{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useLayoutEffect, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nexport default function useKeepPositionScroll() {\n  _s();\n\n  let location = useLocation(); // const [scrollTop, setScrollTop] = useState(0);\n\n  const scrollPosition = useMemo(() => {\n    return JSON.parse(sessionStorage.getItem(\"scroll-position\")) || [];\n  }, []);\n\n  const windowScrollTop = () => {\n    const position = window.pageYOffset; // setScrollTop(position);\n\n    console.log(position);\n    let newScrollPosition = [];\n    const id = scrollPosition.findIndex(v => v.pathname === location.pathname);\n\n    if (id !== -1) {\n      window.scrollTo(0, scrollPosition[id].position);\n      console.log(\"chay vao day\");\n      newScrollPosition = [...scrollPosition];\n      newScrollPosition.splice(id, 1, {\n        pathname: location.pathname,\n        position: position\n      });\n      sessionStorage.setItem(\"scroll-position\", JSON.stringify(newScrollPosition));\n      return;\n    }\n\n    newScrollPosition = [...scrollPosition, {\n      pathname: location.pathname,\n      position: 0\n    }];\n    sessionStorage.setItem(\"scroll-position\", JSON.stringify(newScrollPosition));\n  }; // useEffect(() => {\n  // }, []);\n\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", windowScrollTop);\n    return () => window.removeEventListener(\"scroll\", windowScrollTop);\n  }, []); // useEffect(() => {}, [location.pathname, scrollTop, scrollPosition]);\n\n  return location;\n}\n\n_s(useKeepPositionScroll, \"FSawgIKbwiJo3EpdoKur5AgK+LE=\", false, function () {\n  return [useLocation];\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/github/react-func/keep-scroll/src/hooks/useKeepPositionScroll.js"],"names":["useState","useEffect","useLayoutEffect","useMemo","useLocation","useKeepPositionScroll","location","scrollPosition","JSON","parse","sessionStorage","getItem","windowScrollTop","position","window","pageYOffset","console","log","newScrollPosition","id","findIndex","v","pathname","scrollTo","splice","setItem","stringify","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,eAA9B,EAA+CC,OAA/C,QAA8D,OAA9D;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,eAAe,SAASC,qBAAT,GAAiC;AAAA;;AAC9C,MAAIC,QAAQ,GAAGF,WAAW,EAA1B,CAD8C,CAE9C;;AACA,QAAMG,cAAc,GAAGJ,OAAO,CAAC,MAAM;AACnC,WAAOK,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAAX,KAAyD,EAAhE;AACD,GAF6B,EAE3B,EAF2B,CAA9B;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5B,UAAMC,QAAQ,GAAGC,MAAM,CAACC,WAAxB,CAD4B,CAE5B;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,QAAIK,iBAAiB,GAAG,EAAxB;AAEA,UAAMC,EAAE,GAAGZ,cAAc,CAACa,SAAf,CACRC,CAAD,IAAOA,CAAC,CAACC,QAAF,KAAehB,QAAQ,CAACgB,QADtB,CAAX;;AAIA,QAAIH,EAAE,KAAK,CAAC,CAAZ,EAAe;AACbL,MAAAA,MAAM,CAACS,QAAP,CAAgB,CAAhB,EAAmBhB,cAAc,CAACY,EAAD,CAAd,CAAmBN,QAAtC;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAC,MAAAA,iBAAiB,GAAG,CAAC,GAAGX,cAAJ,CAApB;AACAW,MAAAA,iBAAiB,CAACM,MAAlB,CAAyBL,EAAzB,EAA6B,CAA7B,EAAgC;AAC9BG,QAAAA,QAAQ,EAAEhB,QAAQ,CAACgB,QADW;AAE9BT,QAAAA,QAAQ,EAAEA;AAFoB,OAAhC;AAKAH,MAAAA,cAAc,CAACe,OAAf,CACE,iBADF,EAEEjB,IAAI,CAACkB,SAAL,CAAeR,iBAAf,CAFF;AAKA;AACD;;AAEDA,IAAAA,iBAAiB,GAAG,CAClB,GAAGX,cADe,EAElB;AACEe,MAAAA,QAAQ,EAAEhB,QAAQ,CAACgB,QADrB;AAEET,MAAAA,QAAQ,EAAE;AAFZ,KAFkB,CAApB;AAQAH,IAAAA,cAAc,CAACe,OAAf,CACE,iBADF,EAEEjB,IAAI,CAACkB,SAAL,CAAeR,iBAAf,CAFF;AAID,GAxCD,CAP8C,CAiD9C;AAEA;;;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCf,eAAlC;AAEA,WAAO,MAAME,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqChB,eAArC,CAAb;AACD,GAJQ,EAIN,EAJM,CAAT,CArD8C,CA2D9C;;AAEA,SAAON,QAAP;AACD;;GA9DuBD,qB;UACPD,W","sourcesContent":["import { useState, useEffect, useLayoutEffect, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function useKeepPositionScroll() {\n  let location = useLocation();\n  // const [scrollTop, setScrollTop] = useState(0);\n  const scrollPosition = useMemo(() => {\n    return JSON.parse(sessionStorage.getItem(\"scroll-position\")) || [];\n  }, []);\n\n  const windowScrollTop = () => {\n    const position = window.pageYOffset;\n    // setScrollTop(position);\n    console.log(position);\n    let newScrollPosition = [];\n\n    const id = scrollPosition.findIndex(\n      (v) => v.pathname === location.pathname\n    );\n\n    if (id !== -1) {\n      window.scrollTo(0, scrollPosition[id].position);\n\n      console.log(\"chay vao day\");\n      newScrollPosition = [...scrollPosition];\n      newScrollPosition.splice(id, 1, {\n        pathname: location.pathname,\n        position: position,\n      });\n\n      sessionStorage.setItem(\n        \"scroll-position\",\n        JSON.stringify(newScrollPosition)\n      );\n\n      return;\n    }\n\n    newScrollPosition = [\n      ...scrollPosition,\n      {\n        pathname: location.pathname,\n        position: 0,\n      },\n    ];\n\n    sessionStorage.setItem(\n      \"scroll-position\",\n      JSON.stringify(newScrollPosition)\n    );\n  };\n\n  // useEffect(() => {\n\n  // }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", windowScrollTop);\n\n    return () => window.removeEventListener(\"scroll\", windowScrollTop);\n  }, []);\n\n  // useEffect(() => {}, [location.pathname, scrollTop, scrollPosition]);\n\n  return location;\n}\n"]},"metadata":{},"sourceType":"module"}