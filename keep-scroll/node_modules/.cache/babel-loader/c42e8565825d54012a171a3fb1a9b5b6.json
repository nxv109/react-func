{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useLayoutEffect, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nexport default function useKeepPositionScroll() {\n  _s();\n\n  let location = useLocation();\n  const [scrollTop, setScrollTop] = useState(50);\n  const scrollPosition = useMemo(() => {\n    return JSON.parse(sessionStorage.getItem(\"scroll-position\")) || [];\n  }, []);\n  useEffect(() => {\n    let newScrollPosition = [];\n    const id = scrollPosition.findIndex(v => v.pathname === location.pathname);\n\n    if (id !== -1) {\n      newScrollPosition = [...scrollPosition];\n      newScrollPosition.splice(id, 1, {\n        pathname: location.pathname,\n        position: scrollTop\n      });\n      sessionStorage.setItem(\"scroll-position\", JSON.stringify(newScrollPosition));\n      return;\n    }\n\n    newScrollPosition = [...scrollPosition, {\n      pathname: location.pathname,\n      position: 0\n    }];\n    sessionStorage.setItem(\"scroll-position\", JSON.stringify(newScrollPosition));\n  }, [scrollTop]);\n\n  const windowScrollTop = () => {\n    const position = window.pageYOffset;\n    setScrollTop(position);\n    console.log(position);\n    window.scrollTo(0, position);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", windowScrollTop);\n    return () => window.removeEventListener(\"scroll\", windowScrollTop);\n  }, []); // useEffect(() => {}, [location.pathname, scrollTop, scrollPosition]);\n\n  return location;\n}\n\n_s(useKeepPositionScroll, \"7INAjwYkhwpKjn95JA4uJqoQpec=\", false, function () {\n  return [useLocation];\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/github/react-func/keep-scroll/src/hooks/useKeepPositionScroll.js"],"names":["useState","useEffect","useLayoutEffect","useMemo","useLocation","useKeepPositionScroll","location","scrollTop","setScrollTop","scrollPosition","JSON","parse","sessionStorage","getItem","newScrollPosition","id","findIndex","v","pathname","splice","position","setItem","stringify","windowScrollTop","window","pageYOffset","console","log","scrollTo","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,eAA9B,EAA+CC,OAA/C,QAA8D,OAA9D;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,eAAe,SAASC,qBAAT,GAAiC;AAAA;;AAC9C,MAAIC,QAAQ,GAAGF,WAAW,EAA1B;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMS,cAAc,GAAGN,OAAO,CAAC,MAAM;AACnC,WAAOO,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAAX,KAAyD,EAAhE;AACD,GAF6B,EAE3B,EAF2B,CAA9B;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,iBAAiB,GAAG,EAAxB;AAEA,UAAMC,EAAE,GAAGN,cAAc,CAACO,SAAf,CACRC,CAAD,IAAOA,CAAC,CAACC,QAAF,KAAeZ,QAAQ,CAACY,QADtB,CAAX;;AAIA,QAAIH,EAAE,KAAK,CAAC,CAAZ,EAAe;AACbD,MAAAA,iBAAiB,GAAG,CAAC,GAAGL,cAAJ,CAApB;AACAK,MAAAA,iBAAiB,CAACK,MAAlB,CAAyBJ,EAAzB,EAA6B,CAA7B,EAAgC;AAC9BG,QAAAA,QAAQ,EAAEZ,QAAQ,CAACY,QADW;AAE9BE,QAAAA,QAAQ,EAAEb;AAFoB,OAAhC;AAKAK,MAAAA,cAAc,CAACS,OAAf,CACE,iBADF,EAEEX,IAAI,CAACY,SAAL,CAAeR,iBAAf,CAFF;AAKA;AACD;;AAEDA,IAAAA,iBAAiB,GAAG,CAClB,GAAGL,cADe,EAElB;AACES,MAAAA,QAAQ,EAAEZ,QAAQ,CAACY,QADrB;AAEEE,MAAAA,QAAQ,EAAE;AAFZ,KAFkB,CAApB;AAQAR,IAAAA,cAAc,CAACS,OAAf,CACE,iBADF,EAEEX,IAAI,CAACY,SAAL,CAAeR,iBAAf,CAFF;AAID,GAlCQ,EAkCN,CAACP,SAAD,CAlCM,CAAT;;AAoCA,QAAMgB,eAAe,GAAG,MAAM;AAC5B,UAAMH,QAAQ,GAAGI,MAAM,CAACC,WAAxB;AACAjB,IAAAA,YAAY,CAACY,QAAD,CAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAI,IAAAA,MAAM,CAACI,QAAP,CAAgB,CAAhB,EAAmBR,QAAnB;AACD,GALD;;AAOAnB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCN,eAAlC;AAEA,WAAO,MAAMC,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCP,eAArC,CAAb;AACD,GAJQ,EAIN,EAJM,CAAT,CAlD8C,CAwD9C;;AAEA,SAAOjB,QAAP;AACD;;GA3DuBD,qB;UACPD,W","sourcesContent":["import { useState, useEffect, useLayoutEffect, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function useKeepPositionScroll() {\n  let location = useLocation();\n  const [scrollTop, setScrollTop] = useState(50);\n  const scrollPosition = useMemo(() => {\n    return JSON.parse(sessionStorage.getItem(\"scroll-position\")) || [];\n  }, []);\n\n  useEffect(() => {\n    let newScrollPosition = [];\n\n    const id = scrollPosition.findIndex(\n      (v) => v.pathname === location.pathname\n    );\n\n    if (id !== -1) {\n      newScrollPosition = [...scrollPosition];\n      newScrollPosition.splice(id, 1, {\n        pathname: location.pathname,\n        position: scrollTop,\n      });\n\n      sessionStorage.setItem(\n        \"scroll-position\",\n        JSON.stringify(newScrollPosition)\n      );\n\n      return;\n    }\n\n    newScrollPosition = [\n      ...scrollPosition,\n      {\n        pathname: location.pathname,\n        position: 0,\n      },\n    ];\n\n    sessionStorage.setItem(\n      \"scroll-position\",\n      JSON.stringify(newScrollPosition)\n    );\n  }, [scrollTop]);\n\n  const windowScrollTop = () => {\n    const position = window.pageYOffset;\n    setScrollTop(position);\n    console.log(position);\n    window.scrollTo(0, position);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", windowScrollTop);\n\n    return () => window.removeEventListener(\"scroll\", windowScrollTop);\n  }, []);\n\n  // useEffect(() => {}, [location.pathname, scrollTop, scrollPosition]);\n\n  return location;\n}\n"]},"metadata":{},"sourceType":"module"}