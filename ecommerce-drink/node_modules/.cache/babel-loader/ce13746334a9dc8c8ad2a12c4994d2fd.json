{"ast":null,"code":"import low from \"lowdb\";\nimport LocalStorage from \"lowdb/adapters/LocalStorage\";\nconst adapter = new LocalStorage(\"db\");\nconst db = low(adapter);\nexport const fetchData = (option, id) => {\n  let res = null;\n\n  if (id) {\n    res = db.get(option).chain().find(id).value();\n  } else {\n    res = db.get(option).value();\n  }\n\n  return res;\n};\nexport const fetchProductOfCart = (option, id) => {\n  let res = null;\n\n  if (id) {\n    res = db.get(option).chain().filter(id).value();\n  } else {\n    res = db.get(option).value();\n  }\n\n  return res;\n};\nexport const fetchAllData = (option, id) => {\n  let res = null;\n\n  if (id) {\n    res = db.get(option).chain().filter(id).value();\n  } else {\n    res = db.get(option).value();\n  }\n\n  return res;\n};\nexport const removeCart = () => {\n  db.set(\"cart\", []).write();\n};\nexport const updateData = (option, id, data) => {\n  const res = db.get(option).find(id).assign(data).write();\n  return res;\n};\nexport const sortDataDesc = (option, filter, sortBy, count) => {\n  const res = db.get(option).filter(filter).sortBy(sortBy).reverse().take(count).value();\n  return res;\n};\nexport const addData = (option, data) => {\n  const res = db.get(option).push(data).write();\n  return res;\n};\nexport const removeData = (option, id) => {\n  const res = db.get(option).remove(id).write();\n  return res;\n};","map":{"version":3,"sources":["/Users/nguyen.xuan.vinh/Desktop/github/code-dao-reactjs/ecommerce-drink/src/mixins/fetchData.js"],"names":["low","LocalStorage","adapter","db","fetchData","option","id","res","get","chain","find","value","fetchProductOfCart","filter","fetchAllData","removeCart","set","write","updateData","data","assign","sortDataDesc","sortBy","count","reverse","take","addData","push","removeData","remove"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,OAAO,GAAG,IAAID,YAAJ,CAAiB,IAAjB,CAAhB;AACA,MAAME,EAAE,GAAGH,GAAG,CAACE,OAAD,CAAd;AAEA,OAAO,MAAME,SAAS,GAAG,CAACC,MAAD,EAASC,EAAT,KAAgB;AACvC,MAAIC,GAAG,GAAG,IAAV;;AACA,MAAID,EAAJ,EAAQ;AACNC,IAAAA,GAAG,GAAGJ,EAAE,CACLK,GADG,CACCH,MADD,EAEHI,KAFG,GAGHC,IAHG,CAGEJ,EAHF,EAIHK,KAJG,EAAN;AAKD,GAND,MAMO;AACLJ,IAAAA,GAAG,GAAGJ,EAAE,CAACK,GAAH,CAAOH,MAAP,EAAeM,KAAf,EAAN;AACD;;AAED,SAAOJ,GAAP;AACD,CAbM;AAeP,OAAO,MAAMK,kBAAkB,GAAG,CAACP,MAAD,EAASC,EAAT,KAAgB;AAChD,MAAIC,GAAG,GAAG,IAAV;;AACA,MAAID,EAAJ,EAAQ;AACNC,IAAAA,GAAG,GAAGJ,EAAE,CACLK,GADG,CACCH,MADD,EAEHI,KAFG,GAGHI,MAHG,CAGIP,EAHJ,EAIHK,KAJG,EAAN;AAKD,GAND,MAMO;AACLJ,IAAAA,GAAG,GAAGJ,EAAE,CAACK,GAAH,CAAOH,MAAP,EAAeM,KAAf,EAAN;AACD;;AAED,SAAOJ,GAAP;AACD,CAbM;AAcP,OAAO,MAAMO,YAAY,GAAG,CAACT,MAAD,EAASC,EAAT,KAAgB;AAC1C,MAAIC,GAAG,GAAG,IAAV;;AACA,MAAID,EAAJ,EAAQ;AACNC,IAAAA,GAAG,GAAGJ,EAAE,CACLK,GADG,CACCH,MADD,EAEHI,KAFG,GAGHI,MAHG,CAGIP,EAHJ,EAIHK,KAJG,EAAN;AAKD,GAND,MAMO;AACLJ,IAAAA,GAAG,GAAGJ,EAAE,CAACK,GAAH,CAAOH,MAAP,EAAeM,KAAf,EAAN;AACD;;AAED,SAAOJ,GAAP;AACD,CAbM;AAeP,OAAO,MAAMQ,UAAU,GAAG,MAAM;AAC9BZ,EAAAA,EAAE,CAACa,GAAH,CAAO,MAAP,EAAe,EAAf,EAAmBC,KAAnB;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAG,CAACb,MAAD,EAASC,EAAT,EAAaa,IAAb,KAAsB;AAC9C,QAAMZ,GAAG,GAAGJ,EAAE,CACXK,GADS,CACLH,MADK,EAETK,IAFS,CAEJJ,EAFI,EAGTc,MAHS,CAGFD,IAHE,EAITF,KAJS,EAAZ;AAMA,SAAOV,GAAP;AACD,CARM;AAUP,OAAO,MAAMc,YAAY,GAAG,CAAChB,MAAD,EAASQ,MAAT,EAAiBS,MAAjB,EAAyBC,KAAzB,KAAmC;AAC7D,QAAMhB,GAAG,GAAGJ,EAAE,CACXK,GADS,CACLH,MADK,EAETQ,MAFS,CAEFA,MAFE,EAGTS,MAHS,CAGFA,MAHE,EAITE,OAJS,GAKTC,IALS,CAKJF,KALI,EAMTZ,KANS,EAAZ;AAQA,SAAOJ,GAAP;AACD,CAVM;AAYP,OAAO,MAAMmB,OAAO,GAAG,CAACrB,MAAD,EAASc,IAAT,KAAkB;AACvC,QAAMZ,GAAG,GAAGJ,EAAE,CACXK,GADS,CACLH,MADK,EAETsB,IAFS,CAEJR,IAFI,EAGTF,KAHS,EAAZ;AAKA,SAAOV,GAAP;AACD,CAPM;AASP,OAAO,MAAMqB,UAAU,GAAG,CAACvB,MAAD,EAASC,EAAT,KAAgB;AACxC,QAAMC,GAAG,GAAGJ,EAAE,CACXK,GADS,CACLH,MADK,EAETwB,MAFS,CAEFvB,EAFE,EAGTW,KAHS,EAAZ;AAKA,SAAOV,GAAP;AACD,CAPM","sourcesContent":["import low from \"lowdb\";\nimport LocalStorage from \"lowdb/adapters/LocalStorage\";\n\nconst adapter = new LocalStorage(\"db\");\nconst db = low(adapter);\n\nexport const fetchData = (option, id) => {\n  let res = null;\n  if (id) {\n    res = db\n      .get(option)\n      .chain()\n      .find(id)\n      .value();\n  } else {\n    res = db.get(option).value();\n  }\n\n  return res;\n};\n\nexport const fetchProductOfCart = (option, id) => {\n  let res = null;\n  if (id) {\n    res = db\n      .get(option)\n      .chain()\n      .filter(id)\n      .value();\n  } else {\n    res = db.get(option).value();\n  }\n\n  return res;\n};\nexport const fetchAllData = (option, id) => {\n  let res = null;\n  if (id) {\n    res = db\n      .get(option)\n      .chain()\n      .filter(id)\n      .value();\n  } else {\n    res = db.get(option).value();\n  }\n\n  return res;\n};\n\nexport const removeCart = () => {\n  db.set(\"cart\", []).write();\n};\n\nexport const updateData = (option, id, data) => {\n  const res = db\n    .get(option)\n    .find(id)\n    .assign(data)\n    .write();\n\n  return res;\n};\n\nexport const sortDataDesc = (option, filter, sortBy, count) => {\n  const res = db\n    .get(option)\n    .filter(filter)\n    .sortBy(sortBy)\n    .reverse()\n    .take(count)\n    .value();\n\n  return res;\n};\n\nexport const addData = (option, data) => {\n  const res = db\n    .get(option)\n    .push(data)\n    .write();\n\n  return res;\n};\n\nexport const removeData = (option, id) => {\n  const res = db\n    .get(option)\n    .remove(id)\n    .write();\n\n  return res;\n};\n"]},"metadata":{},"sourceType":"module"}